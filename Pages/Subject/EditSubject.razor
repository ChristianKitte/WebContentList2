@using WebContentList.Data

@page "/editsubject/{id}"

@inject SubjectsService SubjectsService
@inject NavigationManager navigationManager

<h3>@curSubject.Name bearbeiten</h3>

@if (curSubject == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@curSubject" OnValidSubmit="@UpdateSubject">
        <InputNumber typ="int" class="form-control" @bind-Value="curSubject.SubjectId" hidden="true"/>

        <div class="input-group mb-3">
            <InputText class="form-control" @bind-Value="curSubject.Name" autofocus="true" placeholder="Bezeichnung des Themas"/>
        </div>

        <div class="input-group mb-3">
            <InputText class="form-control" @bind-Value="curSubject.Description" placeholder="Beschreibung des Themas"/>
        </div>

        <button class="btn btn-primary" type="submit">Übernehmen</button>
        <button class="btn btn-secondary" type="button" @onclick="CancelUpdate">Abbrechen</button>

        <DataAnnotationsValidator/>
    </EditForm>
}

@code {
    //Die ID muss in der Form angegeben werden, da ansonsten kein Update sondern ein Anfügen erfolgt
    [Parameter]
    public string id { get; set; }

    // Notwenig, um zu Anfang einen Container zu haben
    Subject curSubject = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        curSubject = await SubjectsService.GetSubjectById(int.Parse(id));
    }

    protected async void UpdateSubject()
    {
        await SubjectsService.UpdateSubject(curSubject);
        navigationManager.NavigateTo("subjectlist");
    }

    private void CancelUpdate()
    {
        navigationManager.NavigateTo("subjectlist",true);
    }

}