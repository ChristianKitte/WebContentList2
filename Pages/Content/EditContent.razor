@using WebContentList.Data

@page "/editcontent/{id}"

@inject ContentsService ContentsService
@inject SubjectsService SubjectsService
@inject NavigationManager navigationManager

<h3>Inhalt bearbeiten</h3>

@if (curContent == null || _subjects == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        @if (curContent.ShowPreview)
        {
            <iframe width="450" height="300" src="@curContent.Url" allowfullscreen></iframe>
        }
    </div>

    <form>

        <div class="form-group">
            <label for="link">Link</label>
            <input type="text" class="form-control" @bind="curContent.Url" id="link" placeholder="URL zum Inhalt">
        </div>

        <div class="form-group">
            <label class="form-check-label" for="checkPreview">
                Als Vorschau anzeigen?
            </label>
            <input class="form-check-input" type="checkbox" @bind="curContent.ShowPreview" id="checkPreview"/>
        </div>

        <div class="form-group">
            <label class="form-check-label" for="themen">
                Zu welchem Thema soll der Inhalt zugeordnet werden?
            </label>
            <div class="input-group">
                <select class="custom-select" @bind="@curContent.SubjectId" id="themen">
                    @foreach (var group in _subjects)
                    {
                        <option value="@group.SubjectId">@group.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label for="kurzbezeichnung">Kurzbezeichnung</label>
            <input type="text" class="form-control" @bind="curContent.Name" id="kurzbezeichnung" placeholder="Kurzbezeichnung">
        </div>

        <div class="form-group">
            <label for="beschreibung">Beschreibung</label>
            <input type="text" class="form-control" @bind="curContent.Description" id="beschreibung" placeholder="Beschreibung">
        </div>

        <button class="btn btn-primary" type="button" @onclick="UpdateContent">Speichern</button>
        <button class="btn btn-secondary" type="button" @onclick="CancelUpdate">Abbrechen</button>

    </form>
}

@code {
    //Die ID muss in der Form angegeben werden, da ansonsten kein Update sondern ein Anfügen erfolgt
    [Parameter]
    public string id { get; set; }

    // Notwenig, um zu Anfang einen Container zu haben
    private Content curContent = new();
    private List<Subject>? _subjects;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        curContent = await ContentsService.GetContentById(int.Parse(id));
        _subjects = await SubjectsService.GetSubjectList();
    }

    protected async void UpdateContent()
    {
        await ContentsService.UpdateContent(curContent);
        navigationManager.NavigateTo("contentlist");
    }

    private void CancelUpdate()
    {
        navigationManager.NavigateTo("contentlist");
    }

}